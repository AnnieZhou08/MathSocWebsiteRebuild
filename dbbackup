PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO "django_migrations" VALUES(1,'contenttypes','0001_initial','2015-07-18 00:40:49.213403');
INSERT INTO "django_migrations" VALUES(2,'auth','0001_initial','2015-07-18 00:40:49.278127');
INSERT INTO "django_migrations" VALUES(3,'admin','0001_initial','2015-07-18 00:40:49.315989');
INSERT INTO "django_migrations" VALUES(4,'contenttypes','0002_remove_content_type_name','2015-07-18 00:40:49.527267');
INSERT INTO "django_migrations" VALUES(5,'auth','0002_alter_permission_name_max_length','2015-07-18 00:40:49.558479');
INSERT INTO "django_migrations" VALUES(6,'auth','0003_alter_user_email_max_length','2015-07-18 00:40:49.602003');
INSERT INTO "django_migrations" VALUES(7,'auth','0004_alter_user_username_opts','2015-07-18 00:40:49.635230');
INSERT INTO "django_migrations" VALUES(8,'auth','0005_alter_user_last_login_null','2015-07-18 00:40:49.670020');
INSERT INTO "django_migrations" VALUES(9,'auth','0006_require_contenttypes_0002','2015-07-18 00:40:49.673275');
INSERT INTO "django_migrations" VALUES(10,'tangent','0001_initial','2015-07-18 00:40:50.127860');
INSERT INTO "django_migrations" VALUES(11,'services','0001_initial','2015-07-18 00:40:50.218509');
INSERT INTO "django_migrations" VALUES(12,'services','0002_auto_20150201_0612','2015-07-18 00:40:50.466557');
INSERT INTO "django_migrations" VALUES(13,'services','0003_auto_20150430_0658','2015-07-18 00:40:50.519558');
INSERT INTO "django_migrations" VALUES(14,'sessions','0001_initial','2015-07-18 00:40:50.537162');
INSERT INTO "django_migrations" VALUES(15,'tangent','0002_auto_20150201_0612','2015-07-18 00:40:50.813443');
INSERT INTO "django_migrations" VALUES(16,'tangent','0003_member_picture','2015-07-18 00:40:50.892864');
INSERT INTO "django_migrations" VALUES(17,'tangent','0004_auto_20150201_0811','2015-07-18 00:40:51.140187');
INSERT INTO "django_migrations" VALUES(18,'tangent','0005_auto_20150201_0821','2015-07-18 00:40:51.386831');
INSERT INTO "django_migrations" VALUES(19,'tangent','0006_auto_20150201_0912','2015-07-18 00:40:51.507141');
INSERT INTO "django_migrations" VALUES(20,'tangent','0007_auto_20150201_1135','2015-07-18 00:40:51.642215');
INSERT INTO "django_migrations" VALUES(21,'tangent','0008_member_cover_letter','2015-07-18 00:40:51.731909');
INSERT INTO "django_migrations" VALUES(22,'tangent','0009_auto_20150430_0658','2015-07-18 00:40:51.990161');
INSERT INTO "django_migrations" VALUES(23,'tangent','0010_auto_20150713_0333','2015-07-18 00:40:52.057419');
INSERT INTO "django_migrations" VALUES(24,'tangent','0011_auto_20150713_0350','2015-07-18 00:40:52.177994');
INSERT INTO "django_migrations" VALUES(25,'tangent','0012_auto_20150802_2305','2015-08-24 15:51:00.498925');
CREATE TABLE "external_api_faculty" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "desc" text NOT NULL);
CREATE TABLE "external_api_student" ("quest_id" text NOT NULL PRIMARY KEY, "faculty_id_id" integer NOT NULL REFERENCES "external_api_faculty" ("id"), "term" varchar(2) NOT NULL);
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE);
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"), UNIQUE ("group_id", "permission_id"));
CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), UNIQUE ("user_id", "group_id"));
CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"), UNIQUE ("user_id", "permission_id"));
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id"));
INSERT INTO "django_admin_log" VALUES(1,'2015-08-24 19:16:18.021937','1','President',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(2,'2015-08-24 19:16:23.681437','1','President',2,'No fields changed.',16,3);
INSERT INTO "django_admin_log" VALUES(3,'2015-08-24 19:17:16.652856','2','Vice President, Academic',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(4,'2015-08-24 19:17:53.564007','3','Vice President, Finance',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(5,'2015-08-24 19:19:19.614111','4','Vice President, Operations',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(6,'2015-08-24 19:20:18.306357','5','Vice-President, Events',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(7,'2015-08-24 19:20:33.044212','5','Vice-President, Events',2,'No fields changed.',16,3);
INSERT INTO "django_admin_log" VALUES(8,'2015-08-24 19:20:39.567061','4','Vice-President, Operations',2,'Changed title.',16,3);
INSERT INTO "django_admin_log" VALUES(9,'2015-08-24 19:20:45.353537','3','Vice-President, Finance',2,'Changed title.',16,3);
INSERT INTO "django_admin_log" VALUES(10,'2015-08-24 19:20:51.729405','2','Vice-President, Academic',2,'Changed title.',16,3);
INSERT INTO "django_admin_log" VALUES(11,'2015-08-24 19:23:18.431593','6','Vice-President, Events',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(12,'2015-08-24 19:23:32.442156','6','Vice-President, Events',3,'',16,3);
INSERT INTO "django_admin_log" VALUES(13,'2015-08-24 19:24:24.514943','7','Actuarial Science Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(14,'2015-08-24 19:25:28.787123','8','Computer Science Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(15,'2015-08-24 19:29:10.944990','9','Computing and Financial Management Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(16,'2015-08-24 19:30:12.652685','10','First Year Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(17,'2015-08-24 19:30:47.288068','11','Mathematical Studies and Other Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(18,'2015-08-24 19:31:41.036241','12','Mathematics/Business Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(19,'2015-08-24 19:32:36.156067','13','Pure Mathematics, Applied Mathematics, and Combinatorics and Optimization Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(20,'2015-08-24 19:33:09.451609','14','Software Engineering Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(21,'2015-08-24 19:33:37.446651','15','Statistics Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(22,'2015-08-24 19:34:10.368586','16','Teaching Option Representative',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(23,'2015-08-24 19:34:39.388832','17','Chief Returning Officer',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(24,'2015-08-24 19:35:15.237105','18','Executive Assistant',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(25,'2015-08-24 22:23:17.973076','19','Secretary',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(26,'2015-08-24 22:23:46.318228','20','Speaker',1,'',16,3);
INSERT INTO "django_admin_log" VALUES(27,'2015-08-24 22:27:58.631579','12','Mathematics/Business Representative',2,'No fields changed.',16,3);
INSERT INTO "django_admin_log" VALUES(28,'2015-08-24 22:28:04.242980','1','President',2,'No fields changed.',16,3);
INSERT INTO "django_admin_log" VALUES(29,'2015-08-24 22:28:13.233862','4','Vice-President, Operations',2,'Changed responsibilities.',16,3);
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, UNIQUE ("app_label", "model"));
INSERT INTO "django_content_type" VALUES(1,'admin','logentry');
INSERT INTO "django_content_type" VALUES(2,'auth','permission');
INSERT INTO "django_content_type" VALUES(3,'auth','group');
INSERT INTO "django_content_type" VALUES(4,'auth','user');
INSERT INTO "django_content_type" VALUES(5,'contenttypes','contenttype');
INSERT INTO "django_content_type" VALUES(6,'sessions','session');
INSERT INTO "django_content_type" VALUES(7,'external_api','faculty');
INSERT INTO "django_content_type" VALUES(8,'external_api','student');
INSERT INTO "django_content_type" VALUES(9,'services','locker');
INSERT INTO "django_content_type" VALUES(10,'services','exam');
INSERT INTO "django_content_type" VALUES(11,'services','courseevaluation');
INSERT INTO "django_content_type" VALUES(12,'tangent','member');
INSERT INTO "django_content_type" VALUES(13,'tangent','announcement');
INSERT INTO "django_content_type" VALUES(14,'tangent','organization');
INSERT INTO "django_content_type" VALUES(15,'tangent','organizationdocument');
INSERT INTO "django_content_type" VALUES(16,'tangent','position');
INSERT INTO "django_content_type" VALUES(17,'tangent','scholarship');
INSERT INTO "django_content_type" VALUES(18,'tangent','meeting');
INSERT INTO "django_content_type" VALUES(19,'tangent','log');
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL, UNIQUE ("content_type_id", "codename"));
INSERT INTO "auth_permission" VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO "auth_permission" VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO "auth_permission" VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO "auth_permission" VALUES(4,2,'add_permission','Can add permission');
INSERT INTO "auth_permission" VALUES(5,2,'change_permission','Can change permission');
INSERT INTO "auth_permission" VALUES(6,2,'delete_permission','Can delete permission');
INSERT INTO "auth_permission" VALUES(7,3,'add_group','Can add group');
INSERT INTO "auth_permission" VALUES(8,3,'change_group','Can change group');
INSERT INTO "auth_permission" VALUES(9,3,'delete_group','Can delete group');
INSERT INTO "auth_permission" VALUES(10,4,'add_user','Can add user');
INSERT INTO "auth_permission" VALUES(11,4,'change_user','Can change user');
INSERT INTO "auth_permission" VALUES(12,4,'delete_user','Can delete user');
INSERT INTO "auth_permission" VALUES(13,5,'add_contenttype','Can add content type');
INSERT INTO "auth_permission" VALUES(14,5,'change_contenttype','Can change content type');
INSERT INTO "auth_permission" VALUES(15,5,'delete_contenttype','Can delete content type');
INSERT INTO "auth_permission" VALUES(16,6,'add_session','Can add session');
INSERT INTO "auth_permission" VALUES(17,6,'change_session','Can change session');
INSERT INTO "auth_permission" VALUES(18,6,'delete_session','Can delete session');
INSERT INTO "auth_permission" VALUES(19,7,'add_faculty','Can add faculty');
INSERT INTO "auth_permission" VALUES(20,7,'change_faculty','Can change faculty');
INSERT INTO "auth_permission" VALUES(21,7,'delete_faculty','Can delete faculty');
INSERT INTO "auth_permission" VALUES(22,8,'add_student','Can add student');
INSERT INTO "auth_permission" VALUES(23,8,'change_student','Can change student');
INSERT INTO "auth_permission" VALUES(24,8,'delete_student','Can delete student');
INSERT INTO "auth_permission" VALUES(25,9,'add_locker','Can add locker');
INSERT INTO "auth_permission" VALUES(26,9,'change_locker','Can change locker');
INSERT INTO "auth_permission" VALUES(27,9,'delete_locker','Can delete locker');
INSERT INTO "auth_permission" VALUES(28,10,'add_exam','Can add exam');
INSERT INTO "auth_permission" VALUES(29,10,'change_exam','Can change exam');
INSERT INTO "auth_permission" VALUES(30,10,'delete_exam','Can delete exam');
INSERT INTO "auth_permission" VALUES(31,11,'add_courseevaluation','Can add course evaluation');
INSERT INTO "auth_permission" VALUES(32,11,'change_courseevaluation','Can change course evaluation');
INSERT INTO "auth_permission" VALUES(33,11,'delete_courseevaluation','Can delete course evaluation');
INSERT INTO "auth_permission" VALUES(34,12,'add_member','Can add member');
INSERT INTO "auth_permission" VALUES(35,12,'change_member','Can change member');
INSERT INTO "auth_permission" VALUES(36,12,'delete_member','Can delete member');
INSERT INTO "auth_permission" VALUES(37,13,'add_announcement','Can add announcement');
INSERT INTO "auth_permission" VALUES(38,13,'change_announcement','Can change announcement');
INSERT INTO "auth_permission" VALUES(39,13,'delete_announcement','Can delete announcement');
INSERT INTO "auth_permission" VALUES(40,14,'add_organization','Can add organization');
INSERT INTO "auth_permission" VALUES(41,14,'change_organization','Can change organization');
INSERT INTO "auth_permission" VALUES(42,14,'delete_organization','Can delete organization');
INSERT INTO "auth_permission" VALUES(43,15,'add_organizationdocument','Can add organization document');
INSERT INTO "auth_permission" VALUES(44,15,'change_organizationdocument','Can change organization document');
INSERT INTO "auth_permission" VALUES(45,15,'delete_organizationdocument','Can delete organization document');
INSERT INTO "auth_permission" VALUES(46,16,'add_position','Can add position');
INSERT INTO "auth_permission" VALUES(47,16,'change_position','Can change position');
INSERT INTO "auth_permission" VALUES(48,16,'delete_position','Can delete position');
INSERT INTO "auth_permission" VALUES(49,17,'add_scholarship','Can add scholarship');
INSERT INTO "auth_permission" VALUES(50,17,'change_scholarship','Can change scholarship');
INSERT INTO "auth_permission" VALUES(51,17,'delete_scholarship','Can delete scholarship');
INSERT INTO "auth_permission" VALUES(52,18,'add_meeting','Can add meeting');
INSERT INTO "auth_permission" VALUES(53,18,'change_meeting','Can change meeting');
INSERT INTO "auth_permission" VALUES(54,18,'delete_meeting','Can delete meeting');
INSERT INTO "auth_permission" VALUES(55,19,'add_log','Can add log');
INSERT INTO "auth_permission" VALUES(56,19,'change_log','Can change log');
INSERT INTO "auth_permission" VALUES(57,19,'delete_log','Can delete log');
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL);
INSERT INTO "auth_user" VALUES(3,'pbkdf2_sha256$20000$z2NgvsCrzmUp$BEP760zjL/RjEm3ffCZPwPjOyWSVfmg6M6PZZBZEXt0=',1,'eagomez','','','alejandrogomez54@gmail.com',1,1,'2015-08-24 18:31:26.649018','2015-08-24 18:33:59.985159');
CREATE TABLE "tangent_organizationdocument" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(256) NOT NULL, "description" text NOT NULL, "date_added" date NOT NULL, "last_modified" date NOT NULL, "file" varchar(100) NOT NULL);
CREATE TABLE "tangent_scholarship" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(256) NOT NULL, "organization" varchar(256) NOT NULL, "amount" integer NOT NULL, "description" text NOT NULL, "website" varchar(200) NOT NULL);
CREATE TABLE "tangent_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(128) NOT NULL, "datetime" datetime NOT NULL, "body" text NOT NULL, "user_id" integer NOT NULL REFERENCES "tangent_member" ("id"));
CREATE TABLE "services_locker" ("locker_number" integer NOT NULL PRIMARY KEY, "current_combo" varchar(6) NOT NULL, "combo_number" integer NOT NULL, "combo0" varchar(6) NOT NULL, "combo1" varchar(6) NOT NULL, "combo2" varchar(6) NOT NULL, "combo3" varchar(6) NOT NULL, "combo4" varchar(6) NOT NULL, "owner_id" integer NULL REFERENCES "tangent_member" ("id"));
CREATE TABLE "services_courseevaluation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "file" varchar(100) NOT NULL, "semester" integer NOT NULL);
CREATE TABLE "services_exam" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(256) NOT NULL, "course_number" integer NOT NULL, "subject" varchar(10) NOT NULL, "file" varchar(100) NOT NULL, "semester" integer NOT NULL);
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO "django_session" VALUES('ljeb63fgd4df21bye7poqp4qv4hzzv8v','Nzk4OTMzY2ExYmVjNGJhNDA5NzRjYmZjZTAyZGE2ZjY4ZTVkMWViNjp7Il9hdXRoX3VzZXJfaGFzaCI6IjNhMjQ3NmNiZjJkOTMxMWYwZjUwMDk3ODljNTIyZDE0OWI3MzI3ODEiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJjYXMuYmFja2VuZHMuQ0FTQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2015-08-03 20:51:27.788035');
INSERT INTO "django_session" VALUES('hml8nvid47dk0nw5jiqe1kj4w1oswyrt','Nzk4OTMzY2ExYmVjNGJhNDA5NzRjYmZjZTAyZGE2ZjY4ZTVkMWViNjp7Il9hdXRoX3VzZXJfaGFzaCI6IjNhMjQ3NmNiZjJkOTMxMWYwZjUwMDk3ODljNTIyZDE0OWI3MzI3ODEiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJjYXMuYmFja2VuZHMuQ0FTQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2015-09-07 15:53:58.920223');
INSERT INTO "django_session" VALUES('l5v4mjb2w3m0nnz0keqelxiwp8ep6zgn','MGIxMGIyMGQzNzE5MDQ1ZmVjMzA0MmQxNzEzNjcxN2VjZjc5MTc0Nzp7Il9hdXRoX3VzZXJfaGFzaCI6ImM5OGIxY2M2ODYzNmZkMzdlMzA4YTk4NTY0YmZhM2NlODcxNzhiNWYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJjYXMuYmFja2VuZHMuQ0FTQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIzIn0=','2015-09-07 18:33:59.988879');
CREATE TABLE "tangent_meeting" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "date" date NOT NULL, "location" varchar(256) NOT NULL, "term" varchar(2) NOT NULL, "general" bool NOT NULL, "budget" bool NOT NULL, "agenda" varchar(100) NULL, "minutes" varchar(100) NULL, "budget_file" varchar(100) NULL, "organization_id" integer NOT NULL REFERENCES "tangent_organization" ("id"));
CREATE TABLE "tangent_member" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "has_locker" bool NOT NULL, "requested_refund" bool NOT NULL, "is_volunteer" bool NOT NULL, "bio" text NULL, "website" varchar(200) NULL, "resume" varchar(100) NULL, "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id"), "used_resources" bool NOT NULL, "picture" varchar(100) NULL, "cover_letter" text NULL);
CREATE TABLE "tangent_member_interested_in" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "member_id" integer NOT NULL REFERENCES "tangent_member" ("id"), "position_id" integer NOT NULL REFERENCES "tangent_position" ("id"), UNIQUE ("member_id", "position_id"));
CREATE TABLE "tangent_organization_documents" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "organization_id" integer NOT NULL REFERENCES "tangent_organization" ("id"), "organizationdocument_id" integer NOT NULL REFERENCES "tangent_organizationdocument" ("id"), UNIQUE ("organization_id", "organizationdocument_id"));
CREATE TABLE "tangent_organization" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(256) NOT NULL UNIQUE, "description" text NULL, "affiliations" varchar(256) NULL, "member_count" integer NOT NULL, "fee" integer NOT NULL, "office" varchar(32) NOT NULL, "website" varchar(200) NOT NULL, "classification" varchar(32) NOT NULL);
CREATE TABLE "tangent_position" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(256) NOT NULL, "start_date" date NULL, "end_date" date NULL, "key_holder" bool NOT NULL, "has_key" bool NOT NULL, "occupied_by_id" integer NULL REFERENCES "tangent_member" ("id"), "is_admin" bool NOT NULL, "responsibilities" text NULL);
INSERT INTO "tangent_position" VALUES(1,'President','2015-09-14','2015-12-31',1,1,NULL,0,'The President of the Math Society is the CEO of the Society and an ex-officio member of all committees and Boards of the Society. The Presidents duties include:

- To preside over General Meetings of the Society
- To provide for Society representation at official functions and on public occasions
- To be responsible for Society public relations
- To know and interpret the bylaws of the Society
- To appoint members to act as representatives of the Society on committees external thereto');
INSERT INTO "tangent_position" VALUES(2,'Vice-President, Academic','2015-09-01','2015-12-31',1,1,NULL,1,'The VPA is tasked to represent student views and opinions on academic issues in various faculty and school councils. The VPA is also on various committees to review and amend academic plan changes. Additionally, they can provide academic rights counselling and organize forums for the discussion of issues of interest to students. ');
INSERT INTO "tangent_position" VALUES(3,'Vice-President, Finance','2015-09-01','2015-12-31',1,1,NULL,1,'The vice president of finance oversees the MathSoc account and the Capital Improvements Fund. The VPF is responsible for keeping track of all money-related matters inside the society, that include but are not limited to: drafting budget, processing expense claims, cash closes of office, deposits and etc.. Additionally, the VPF sits on all finance-related committees under MathSoc including the CnD finance board. ');
INSERT INTO "tangent_position" VALUES(4,'Vice-President, Operations','2015-09-01','2015-12-31',1,1,NULL,1,'The Vice President of Operations (VPO) is primarily responsible in ensuring the services offered by the Mathematics Society are being run efficiently and effectively. These services include:

- The MathSoc Website
- The MathSoc Office
- Novelties
- Comfy Lounge
- Coffee and Donut Shop
- Lockers');
INSERT INTO "tangent_position" VALUES(5,'Vice-President, Events','2015-09-01','2015-12-31',1,1,NULL,1,'The Vice-President, Events is responsible for:

- Organizing Society events and activites for Society members
- Publicizing the events within MathSoc
- Encouraging members to become more involved in the Society and ensuring that the opportunity exists for them to do so
- Ensuring that hardworking volunteers do not go unrecognized, especially those whose efforts are less immediately visible');
INSERT INTO "tangent_position" VALUES(7,'Actuarial Science Representative','2015-09-01','2015-12-31',1,1,NULL,0,'Actuarial Science Representatives are voting members of Council, elected by Actuarial Science students to represent their interests. Actuarial Science students include those in Honours or Joint Honours Actuarial Science programs, including Mathematical Finance. ');
INSERT INTO "tangent_position" VALUES(8,'Computer Science Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Computer Science Representatives are voting members of Council, elected by Computer Science students to represent their interests. Computer Science students include all students in Honours or Joint Honours programs offered by the David R. Cheriton School of Computer Science, including Computer Science, Bioinformatics, the Computer Science and Business Double Degree, and Computational Mathematics. ');
INSERT INTO "tangent_position" VALUES(9,'Computing and Financial Management Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Computing and Financial Management Representatives are voting members of Council, elected by CFM students to represent their interests. ');
INSERT INTO "tangent_position" VALUES(10,'First Year Representative','2015-09-01','2015-12-31',0,0,NULL,0,'First Year Representatives are voting members of Council, elected by first-year students of all programs to represent their interests. ');
INSERT INTO "tangent_position" VALUES(11,'Mathematical Studies and Other Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Mathematical Studies and Other Representatives are voting members of Council. They are elected by students in the Mathematical Studies program, as well as students not represented in other constituencies (including undeclared students), and serve on Council to represent those students'' interests. ');
INSERT INTO "tangent_position" VALUES(12,'Mathematics/Business Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Mathematics/Business Representatives are voting members of Council, elected by Mathematics/Business students to represent their interests. Mathematics/Business students include those in Honours or Joint Honours Mathematics/Business programs, including FARM, Math/Chartered Accountancy, Information Technology Management, Mathematical Economics, and the Math and CS Double Degree programs.');
INSERT INTO "tangent_position" VALUES(13,'Pure Mathematics, Applied Mathematics, and Combinatorics and Optimization Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Pure Mathematics, Applied Mathematics, and Combinatorics and Optimization Representatives are voting members of Council, elected by PM, AM, and CO students to represent their interests. PM, AM, and CO students include those in Honours or Joint Honours PM, AM, or CO programs, including Mathematical Optimization, Mathematical Finance, Mathematical Physics offered by the Faculty of Math, and Computational Mathematics ');
INSERT INTO "tangent_position" VALUES(14,'Software Engineering Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Software Engineering Representatives are voting members of Council, elected by SE students to represent their interests.');
INSERT INTO "tangent_position" VALUES(15,'Statistics Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Statistics Representatives are voting members of Council, elected by Statistics students to represent their interests. ');
INSERT INTO "tangent_position" VALUES(16,'Teaching Option Representative','2015-09-01','2015-12-31',0,0,NULL,0,'Teaching Option Representatives are voting members of Council, elected by Teaching Option students to represent their interests. ');
INSERT INTO "tangent_position" VALUES(17,'Chief Returning Officer','2015-09-01','2015-12-31',0,0,NULL,0,'CRO stands for Chief Returning Officer, and this is the person in charge of elections.
The CRO works with other members of the Election committee to publicize elections, verify nominees, run polling stations and most importantly to ensure that elections are fair and problem-free.');
INSERT INTO "tangent_position" VALUES(18,'Executive Assistant','2015-09-01','2015-12-31',0,0,NULL,0,'An Executive Assistant is either someone formally appointed to help the executive with their duties, or else someone inserted arbitrarily to give them easy access to the website. Probably the latter. ');
INSERT INTO "tangent_position" VALUES(19,'Secretary','2015-09-01','2015-12-31',0,0,NULL,0,'The secretary is responsible for taking minutes at council meetings, sending the minutes out to Council to approve, and for posting the minutes on the webpage, as well as being the person in charge of maintaining the Council list on the website. ');
INSERT INTO "tangent_position" VALUES(20,'Speaker','2015-09-01','2015-12-31',0,0,NULL,0,'The Speaker of the Mathematics Society Council is charged with running the meetings of Council according to Robert''s Rules of Orders and the Bylaws of the Society.');
CREATE TABLE "tangent_organization_positions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "organization_id" integer NOT NULL REFERENCES "tangent_organization" ("id"), "position_id" integer NOT NULL REFERENCES "tangent_position" ("id"), UNIQUE ("organization_id", "position_id"));
CREATE TABLE "tangent_announcement" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(256) NOT NULL, "date" datetime NOT NULL, "body" text NOT NULL, "image" varchar(100) NULL, "author_id" integer NOT NULL REFERENCES "tangent_member" ("id"), "author_position_id" integer NOT NULL REFERENCES "tangent_position" ("id"), "action" varchar(200) NULL, "order_key" integer NOT NULL UNIQUE);
DELETE FROM sqlite_sequence;
INSERT INTO "sqlite_sequence" VALUES('django_migrations',25);
INSERT INTO "sqlite_sequence" VALUES('django_content_type',19);
INSERT INTO "sqlite_sequence" VALUES('auth_permission',57);
INSERT INTO "sqlite_sequence" VALUES('auth_user',3);
INSERT INTO "sqlite_sequence" VALUES('tangent_log',0);
INSERT INTO "sqlite_sequence" VALUES('services_courseevaluation',0);
INSERT INTO "sqlite_sequence" VALUES('services_exam',0);
INSERT INTO "sqlite_sequence" VALUES('tangent_meeting',0);
INSERT INTO "sqlite_sequence" VALUES('tangent_member',1);
INSERT INTO "sqlite_sequence" VALUES('tangent_member_interested_in',0);
INSERT INTO "sqlite_sequence" VALUES('tangent_organization_documents',0);
INSERT INTO "sqlite_sequence" VALUES('tangent_organization',0);
INSERT INTO "sqlite_sequence" VALUES('tangent_position',20);
INSERT INTO "sqlite_sequence" VALUES('tangent_announcement',0);
INSERT INTO "sqlite_sequence" VALUES('django_admin_log',29);
CREATE INDEX "external_api_student_d3f9e98e" ON "external_api_student" ("faculty_id_id");
CREATE INDEX "auth_group_permissions_0e939a4f" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_8373b171" ON "auth_group_permissions" ("permission_id");
CREATE INDEX "auth_user_groups_e8701ad4" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_0e939a4f" ON "auth_user_groups" ("group_id");
CREATE INDEX "auth_user_user_permissions_e8701ad4" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_8373b171" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_417f1b1c" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_e8701ad4" ON "django_admin_log" ("user_id");
CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id");
CREATE INDEX "tangent_log_e8701ad4" ON "tangent_log" ("user_id");
CREATE INDEX "services_locker_5e7b1936" ON "services_locker" ("owner_id");
CREATE INDEX "django_session_de54fa62" ON "django_session" ("expire_date");
CREATE INDEX "tangent_meeting_26b2345e" ON "tangent_meeting" ("organization_id");
CREATE INDEX "tangent_member_interested_in_b5c3e75b" ON "tangent_member_interested_in" ("member_id");
CREATE INDEX "tangent_member_interested_in_bce5bd07" ON "tangent_member_interested_in" ("position_id");
CREATE INDEX "tangent_organization_documents_26b2345e" ON "tangent_organization_documents" ("organization_id");
CREATE INDEX "tangent_organization_documents_3c3f7d4b" ON "tangent_organization_documents" ("organizationdocument_id");
CREATE INDEX "tangent_position_a47496e2" ON "tangent_position" ("occupied_by_id");
CREATE INDEX "tangent_organization_positions_26b2345e" ON "tangent_organization_positions" ("organization_id");
CREATE INDEX "tangent_organization_positions_bce5bd07" ON "tangent_organization_positions" ("position_id");
CREATE INDEX "tangent_announcement_4f331e2f" ON "tangent_announcement" ("author_id");
CREATE INDEX "tangent_announcement_fcb2e6ff" ON "tangent_announcement" ("author_position_id");
COMMIT;
